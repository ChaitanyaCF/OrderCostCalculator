version: '3.8'

services:
  # Full-stack Order Cost Calculator with Conversation Progression
  order-cost-calculator:
    build:
      context: .
      dockerfile: Dockerfile
    image: order-cost-calculator:latest
    container_name: order-cost-calculator
    ports:
      - "3000:3000"   # Frontend
      - "8082:8082"   # Backend API
    volumes:
      - ./docker-data:/app/data
      - ./logs:/app/logs
    environment:
      # Database Configuration - PostgreSQL
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://faas-dev.caaywughmqtk.ap-south-1.rds.amazonaws.com:5432/procostdb_new
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_USERNAME=captainfresh
      - SPRING_DATASOURCE_PASSWORD=C4pt41nFre5h1001
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_SQL_INIT_MODE=never
      - SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION=false
      
      # AI Integration (Required for conversation progression)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key-here}
      - OPENAI_MODEL=gpt-4o-mini
      - OPENAI_API_URL=https://api.openai.com/v1/chat/completions
      - OPENAI_TEMPERATURE=0.1
      
      # Enhanced Logging for Debugging
      - LOGGING_LEVEL_COM_PROCOST_API_CONTROLLER_ZAPIERDATACONTROLLER=INFO
      - LOGGING_LEVEL_COM_PROCOST_API_SERVICE_HYBRIDEMAILPROCESSOR=INFO
      - LOGGING_LEVEL_COM_PROCOST_API_SERVICE_OPENAISERVICE=INFO
      
      # JVM Optimization
      - JAVA_OPTS=-XX:+UseContainerSupport -XX:MaxRAMPercentage=60.0 -XX:+UseG1GC -XX:+UseStringDeduplication
      
      # Application Features
      - SPRING_JPA_SHOW_SQL=false
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      
      # URL Configuration (configurable for production deployment)
      - BACKEND_URL=${BACKEND_URL:-localhost:8082}
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8082}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:3001,http://localhost:8082}
      
    healthcheck:
      test: |
        wget --no-verbose --tries=1 --spider http://localhost:3000/ &&
        wget --no-verbose --tries=1 --spider http://localhost:8082/api/health
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - app-network

  # Reverse Proxy for Production (Optional)
  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      order-cost-calculator:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - production

volumes:
  data:
    driver: local
  logs:
    driver: local

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16