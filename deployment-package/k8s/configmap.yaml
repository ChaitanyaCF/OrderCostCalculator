apiVersion: v1
kind: ConfigMap
metadata:
  name: order-cost-calculator-config
  namespace: order-cost-calculator
data:
  # Backend configuration
  application.properties: |
    # Server configuration
    server.port=8082
    server.servlet.context-path=/

    # Database configuration (H2 in-memory for demo, use PostgreSQL/MySQL for production)
    spring.datasource.url=jdbc:h2:file:/app/data/procostdb_new
    spring.datasource.driverClassName=org.h2.Driver
    spring.datasource.username=sa
    spring.datasource.password=password
    
    # H2 Console (disable in production)
    spring.h2.console.enabled=false
    spring.h2.console.path=/h2-console
    
    # JPA Configuration
    spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
    spring.jpa.hibernate.ddl-auto=update
    spring.jpa.show-sql=false
    spring.jpa.properties.hibernate.format_sql=false
    
    # Security
    jwt.secret=mySecretKey
    jwt.expiration=86400000
    
    # Logging
    logging.level.com.procost.api=INFO
    logging.level.org.springframework.security=INFO
    logging.file.name=/app/logs/application.log
    
    # CORS configuration
    app.cors.allowed-origins=http://localhost:3000,https://your-domain.com
    
  # Frontend configuration
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        server {
            listen 3000;
            server_name localhost;
            root /usr/share/nginx/html;
            index index.html;
            
            location / {
                try_files $uri $uri/ /index.html;
            }
            
            location /api/ {
                proxy_pass http://backend-service:8082/api/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }
